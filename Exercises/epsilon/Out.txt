------------------------------------------------------
My max int (from while loop) is 2147483647
My max int (from int.MaxValue) is 2147483647
------------------------------------------------------
My min int (from while loop) is -2147483648
My min int (from int.MinValue) is -2147483648
------------------------------------------------------
Epsilon for double is 2.22044604925031E-16
Epsilon for float is 1.192093E-07
------------------------------------------------------
sumA-1 = 0.000000e+000, should be 1.110223e-010
sumB-1 = 1.110223e-010, should be 1.110223e-010

The results are different for the following reason:
When adding machine epsilon to a significantly
larger number (1), C-sharp simply disregards
the addition as negleglible (sumA). However,
when machine epsilon is added to 0, it contributes
so C-sharp cannot disregard it a negleglible (sumB).
------------------------------------------------------
Testing the implemented approx method with a few examples
1,2: False
0,0: True
0,1e-10: True
------------------------------------------------------
