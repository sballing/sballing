----------------------------------------------
Testing the optimized algorithm as in exercise A:
----------------------------------------------
Generating random symmetric matrix A:

         6          5          3          8          5          1          6 
         5          2          5          7          7          7          2 
         3          5          3          1          7          7          2 
         8          7          1          1          1          7          2 
         5          7          7          1          1          5          4 
         1          7          7          7          5          3          5 
         6          2          2          2          4          5          4 
----------------------------------------------
Making the Jacobi EVD:
The number of sweeps required was: 6

The matrix D containing eigenvalues on the diagonal is:

     -10.2  -7.94e-12   1.94e-14   1.39e-19   3.99e-09  -7.16e-10  -4.31e-12 
 -7.94e-12      -7.76   8.06e-15      8e-22   1.04e-09  -1.79e-10  -1.03e-12 
  1.94e-14   8.06e-15      -3.75          0  -4.44e-10   1.53e-12   4.45e-15 
  1.39e-19      8e-22          0      0.942   4.46e-13   1.39e-17   1.98e-19 
  3.99e-09   1.04e-09  -4.44e-10   4.46e-13       3.09          0  -8.62e-09 
 -7.16e-10  -1.79e-10   1.53e-12   1.39e-17          0       6.73      2e-09 
 -4.31e-12  -1.03e-12   4.45e-15   1.98e-19  -8.62e-09      2e-09         31 

The matrix V containing (normalized) eigenvectors in columns is:

     0.415    -0.0993      0.254       -0.4       -0.1     -0.648      0.405 
     0.185      0.582     -0.547     -0.131      0.339      0.111      0.427 
    -0.204      0.328      0.605     -0.294     -0.193      0.487      0.352 
    -0.641     -0.114      0.161      0.191      0.541     -0.314       0.35 
     -0.27     -0.569      -0.45     -0.355     -0.284      0.234      0.372 
     0.486     -0.368      0.162      0.523      0.192       0.34      0.418 
    -0.178      0.265     -0.125      0.547     -0.654     -0.249      0.306 
----------------------------------------------
Checking that V^T A V gives D:

     -10.2  -7.94e-12   1.78e-14   1.67e-15   3.99e-09  -7.16e-10  -4.31e-12 
 -7.95e-12      -7.76   8.27e-15  -1.33e-15   1.04e-09  -1.79e-10  -1.04e-12 
  1.74e-14   7.97e-15      -3.75   1.11e-16  -4.44e-10   1.53e-12  -2.61e-15 
   1.3e-15  -1.67e-15  -5.41e-16      0.942   4.47e-13    2.8e-15  -7.52e-15 
  3.99e-09   1.04e-09  -4.44e-10   4.46e-13       3.09  -6.66e-16  -8.62e-09 
 -7.16e-10  -1.79e-10   1.53e-12   2.22e-15  -4.44e-16       6.73      2e-09 
 -4.31e-12  -1.04e-12  -1.55e-15  -8.88e-15  -8.62e-09      2e-09         31 

By virtue of the approx. method, this is True
----------------------------------------------
Checking that V D V^T gives A:

         6          5          3          8          5          1          6 
         5          2          5          7          7          7          2 
         3          5          3          1          7          7          2 
         8          7          1          1          1          7          2 
         5          7          7          1          1          5          4 
         1          7          7          7          5          3          5 
         6          2          2          2          4          5          4 

By virtue of the approx. method, this is True
----------------------------------------------
Checking that V^T V gives the identity:

         1   2.01e-16   2.36e-16   -1.8e-16  -3.61e-16   1.18e-16  -3.47e-17 
  2.01e-16          1  -1.67e-16   8.33e-17  -8.33e-17   6.94e-17  -4.16e-17 
  2.36e-16  -1.67e-16          1   1.39e-16  -1.94e-16  -1.25e-16  -2.36e-16 
  -1.8e-16   8.33e-17   1.39e-16          1  -1.11e-16   1.67e-16  -3.33e-16 
 -3.61e-16  -8.33e-17  -1.94e-16  -1.11e-16          1   1.94e-16  -1.94e-16 
  1.18e-16   6.94e-17  -1.25e-16   1.67e-16   1.94e-16          1  -1.39e-17 
 -3.47e-17  -4.16e-17  -2.36e-16  -3.33e-16  -1.94e-16  -1.39e-17          1 

By virtue of the approx. method, this is True
----------------------------------------------
Checking that V V^T gives the identity:

         1   2.01e-16   2.36e-16   -1.8e-16  -3.61e-16   1.18e-16  -3.47e-17 
  2.01e-16          1  -1.67e-16   8.33e-17  -8.33e-17   6.94e-17  -4.16e-17 
  2.36e-16  -1.67e-16          1   1.39e-16  -1.94e-16  -1.25e-16  -2.36e-16 
  -1.8e-16   8.33e-17   1.39e-16          1  -1.11e-16   1.67e-16  -3.33e-16 
 -3.61e-16  -8.33e-17  -1.94e-16  -1.11e-16          1   1.94e-16  -1.94e-16 
  1.18e-16   6.94e-17  -1.25e-16   1.67e-16   1.94e-16          1  -1.39e-17 
 -3.47e-17  -4.16e-17  -2.36e-16  -3.33e-16  -1.94e-16  -1.39e-17          1 

By virtue of the approx. method, this is True
----------------------------------------------
In conclusion: The optimized Jacobi EVD is succesful! :-)
----------------------------------------------
Both the original and optimized algorithm have been investigated with regards to time
This can be seen in 'timing.png' in this directory
Evidently, both algorithms scale as O(n^3) as expected
----------------------------------------------
